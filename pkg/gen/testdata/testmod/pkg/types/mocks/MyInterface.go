// Code generated by mockery v2.35.4. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	v1 "k8s.io/api/core/v1"
)

// MyInterface is an autogenerated mock type for the MyInterface type
type MyInterface struct {
	mock.Mock
}

// New provides a mock function with given fields: pod
func (_m *MyInterface) New(pod *v1.Pod) string {
	ret := _m.Called(pod)

	var r0 string
	if rf, ok := ret.Get(0).(func(*v1.Pod) string); ok {
		r0 = rf(pod)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// newPrivate provides a mock function with given fields: pod
func (_m *MyInterface) newPrivate(pod *v1.Pod) string {
	ret := _m.Called(pod)

	var r0 string
	if rf, ok := ret.Get(0).(func(*v1.Pod) string); ok {
		r0 = rf(pod)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewMyInterface creates a new instance of MyInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMyInterface(t interface {
	mock.TestingT
	Cleanup(func())
},
) *MyInterface {
	mock := &MyInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
